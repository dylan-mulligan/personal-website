name: Build and Deploy

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build project
        run: |
          export CI=false  # Prevent treating warnings as errors
          npm run build

      - name: Upload production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: build  # Ensure only the build output is uploaded

#  deploy:
#    needs: build  # Ensure deploy runs only after build completes
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Download build artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: production-files
#          path: build
#
#      - name: Deploy to Cloudflare Pages
#        uses: cloudflare/pages-action@v1
#        with:
#          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
#          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
#          projectName: 'your-cloudflare-project-name'
#          directory: 'build'
#          zoneId: ${{ secrets.CLOUDFLARE_ZONE_ID }}